<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

use Drupal\Core\Render\Element;
use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block_id'] = $variables['elements']['#id'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block__views_block__of_interest(&$variables) {
  // @todo change to correct url
  $variables['related_jobs_link'] = 'https://helfi-rekry.docker.so/';
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Default template: organization-information-block.html.twig.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function hdbt_subtheme_preprocess_organization_information_block(array &$variables) : void {
  $variables['view_mode'] = $variables['elements']['#view_mode'];

  // Helpful $content variable for template.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  // Set city description title and text variables.
  $job_listings_config = \Drupal::config('helfi_rekry_content.job_listings');
  $variables['content']['city_description_title'] = $job_listings_config->get('city_description_title');
  $variables['content']['city_description_text'] = $job_listings_config->get('city_description_text');

  // Get organization.
  if (!empty($variables["elements"]["field_organization"]["#items"])) {
    $organization_id = $variables["elements"]["field_organization"]["#items"]->target_id;
    $organization = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($organization_id);
  }

  // Set organization default image variable.
  if (!empty($organization) && !empty($organization->get("field_default_image")->first())) {
    $variables['content']['organization_default_image'] = $organization->get("field_default_image")->first()->view([
      'type' => 'image',
      'label' => 'hidden',
      'settings' => [
        'image_style' => '3_2_m_2x',
        'image_link' => '',
      ],
    ]);
  }

  // Set organization description from taxonomy term if it's missing from node.
  if (!empty($organization) && $node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->field_organization_description->isEmpty() && !empty($org_description = $organization->getDescription())) {
      $variables['content']['field_organization_description'] = strip_tags($org_description);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Adds number of open vacancies for job listing title field template.
 *
 * @throws \Drupal\Core\TypedData\Exception\MissingDataException
 */
function hdbt_subtheme_preprocess_field(&$variables): void {
  // Return yearly if not processing job listing title.
  if (
    $variables['field_name'] != 'title' ||
    $variables['element']['#entity_type'] != 'node' ||
    $variables['element']['#bundle'] != 'job_listing'
  ) {
    return;
  }

  if ($node = $variables['element']['#object']) {
    /** @var \Drupal\node\NodeInterface $node */
    $variables['vacancies'] = (int) $node->get('field_jobs')?->first()?->getString();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK() for blocks.
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide block based menu suggestions.
 */
function hdbt_subtheme_theme_suggestions_menu_alter(&$suggestions, $variables) {
  if (isset($variables['attributes']['block_id'])) {
    $block_id = str_replace('hdbt_subtheme_', '', $variables['attributes']['block_id']);

    switch ($block_id) {
      case 'mobile_navigation':
        $suggestions[] = 'menu__mobile';
        break;

      case 'mainnavigation':
        $suggestions[] = 'menu__main__desktop';
        break;

      case 'main_navigation_level_2':
        $suggestions[] = 'menu__main__sidebar';
        break;

      case 'brandingnavigation':
        $suggestions[] = 'menu__main__branding';
        break;

      default:
        $suggestions[] = 'menu__' . $variables['attributes']['block_id'];
        break;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_page(&$variables) {
  // Handle sidebar visibility.
  $entity = hdbt_content_get_page_entity();
  if ($entity instanceof NodeInterface) {

    // Handle first and second sidebar visibility for the "Job listing"
    // (job_listing) content type.
    if ($entity->getType() === 'job_listing') {
      $variables['has_sidebar_second'] = TRUE;
    }
  }
}
