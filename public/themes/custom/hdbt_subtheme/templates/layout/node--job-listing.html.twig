{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{%
  set classes = [
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  first_paragraph_grey ? 'has-first-gray-bg-block',
  node_class,
]
%}

<article{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label and not page and view_mode is not same as('full') %}
    <h2{{ title_attributes }}>
      {% set link_attributes = {
        'rel': 'bookmark',
      } %}
      {{ link(label, node_url, link_attributes) }}
    </h2>
  {% endif %}
  {{ title_suffix }}

  {% block main_content %}
    {% embed "@hdbt/misc/component.twig" with
      {
        component_classes: [
          'component--job-listing',
        ],
        component_content_class: 'job-listing'
      }
    %}
      {% block component_content %}
        {% if content.field_employment_type|render or content.field_employment|render %}
          {% embed '@hdbt/misc/tag-list.twig' %}
            {% block content %}
              {% if content.field_employment_type|render %}
                  {% include '@hdbt/misc/tag.twig' with {
                    tag: content.field_employment_type,
                    size: 'large'
                  }%}
              {% endif %}
              {% if content.field_employment|render %}
                {% include '@hdbt/misc/tag.twig' with {
                  tag: content.field_employment,
                  size: 'large'
                }%}
              {% endif %}
            {% endblock content %}
          {% endembed %}
        {% endif %}
        {{ content.field_organization_name }}
        {{ content.field_link_to_application }}
        <section class="job-listing__metadata-wrapper">
          <div class="job-listing__metadata job-listing__metadata--application-ends">
            <span class="job-listing__metadata__label">{{ 'Application ends'|t }}</span>
            <span class="job-listing__metadata__content">
              {% if content.field_publication_ends|render %}
                {{ content.field_publication_ends }}
              {% else %}
                -
              {% endif %}
            </span>
          </div>
          {% if content.field_salary|render %}
            <div class="job-listing__metadata job-listing__metadata--salary">
              <span class="job-listing__metadata__label">{{ 'Salary'|t }}</span>
              <span class="job-listing__metadata__content">
                  {{ content.field_salary }}
              </span>
            </div>
          {% endif %}
          <div class="job-listing__metadata job-listing__metadata--job-duration">
            <span class="job-listing__metadata__label">{{ 'Employment contract'|t }}</span>
            <span class="job-listing__metadata__content">
              {% if content.field_job_duration|render %}
                {{ content.field_job_duration }}
              {% else %}
                -
              {% endif %}
            </span>
          </div>
          <div class="job-listing__metadata job-listing__metadata--address">
            <span class="job-listing__metadata__label">{{ 'Address'|t }}</span>
            <span class="job-listing__metadata__content">
              {% if content.field_address|render %}
                {{ content.field_address }}, {{ content.field_postal_code }} {{ content.field_postal_area }}
              {% else %}
                -
              {% endif %}
            </span>
          </div>
          <div class="job-listing__metadata job-listing__metadata--published">
            <span class="job-listing__metadata__label">{{ 'Published'|t }}</span>
            <span class="job-listing__metadata__content">
              {{ content.field_publication_starts }}
            </span>
          </div>
          <div class="job-listing__metadata job-listing__metadata--job-code">
            <span class="job-listing__metadata__label">{{ 'Job code'|t }}</span>
            <span class="job-listing__metadata__content">
              {% if content.field_recruitment_id|render %}
                {{ content.field_recruitment_id }}
              {% else %}
                -
              {% endif %}
            </span>
          </div>
        </section>
        {{ content.job_description }}
        {{ content.field_salary_class }}
        {% if content.field_contacts|render or content.field_internet_link %}
          <div class="job-listing__additional-information">
            <h2 class="job-listing__additional-information__title">{{ 'Additional information'|t }}</h2>
            <div class="job-listing__additional-information__content">
              {{ content.field_contacts }}
              {{ content.field_internet_link }}
            </div>
          </div>
        {% endif %}
        {% if content.field_video|render %}
          {% include '@hdbt/component/remote-video.twig' with {
            video: content.field_video,
          }%}
        {% endif %}
        {{ content.field_link_to_application }}
        {{ drupal_block('hdbt_content_social_sharing_block') }}
      {% endblock component_content %}
    {% endembed %}
  {% endblock main_content %}

</article>
