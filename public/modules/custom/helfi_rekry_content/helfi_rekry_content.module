<?php

declare(strict_types = 1);

use Drupal\migrate\MigrateSkipRowException;

/**
 * Format filename from source uri
 * 
 * @param string|null
 *   The source uri
 * 
 * @return string|null
 *   Filename or null
 */
function _helfi_rekry_content_filename(string|null $sourceUri = NULL): ?string  {
  if(!$sourceUri) {
    return NULL;
  }

  return strtok(basename($sourceUri), '?');
}

/**
 * Get media entity by file id
 * 
 * @param string|null
 *   The file id
 * 
 * @return string|null
 *   Media entity id or null
 */
function _helfi_rekry_content_get_media_image(string|null $fid = NULL): ?string {
  if(!$fid) {
    return NULL;
  }

  $entityQuery = \Drupal::entityQuery('media')
    ->condition('bundle', 'job_listing_image')
    ->condition('field_media_image.target_id', $fid);
  $ids = $entityQuery->execute();

  if(!empty($ids)) {
    return reset($ids);
  }

  return NULL;
}

/**
 * Get node id by recruitment id
 * 
 * @param string
 *   The recruitment id
 * 
 * @return string|null
 *   The nid or null
 */
function _helfi_rekry_content_lookup_job_nid($id): ?string {
  $entityQuery = \Drupal::entityQuery('node')
    ->condition('type', 'job_listing')
    ->condition('field_recruitment_id', $id)
    ->range(0, 1)
    ->latestRevision();
  $ids = $entityQuery->execute();

  if(!empty($ids)) {
    return reset($ids);
  }

  return NULL;
}

/**
 * Add http protocol to urls, since api response might not have themm
 * 
 * @param string|null
 *   The url
 * 
 * @return string|null
 *   The resulting url or null
 */
function _helfi_rekry_add_schema($url = NULL): ?string {
  if($url && parse_url($url, PHP_URL_SCHEME) === null) {
    return 'https://' . $url;
  }

  return $url;
}
