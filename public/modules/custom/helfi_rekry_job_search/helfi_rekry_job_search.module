<?php

/**
 * @file
 * Functions for HELfi Rekry Job Search module.
 */

declare(strict_types = 1);

use Drupal\helfi_platform_config\DTO\ParagraphTypeCollection;

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_rekry_job_search_preprocess_paragraph__job_search(array &$variables) {
  $variables['#attached']['library'][] = 'helfi_rekry_job_search/job-search';
}

/**
 * Implements hook_page_attachments_alter().
 *
 * Update job search's task area pages metadata.
 */
function helfi_rekry_job_search_page_attachments_alter(array &$attachments) {
  $queryParams = \Drupal::request()->query->all();

  if (!array_key_exists('task_areas', $queryParams)) {
    return;
  }

  // Only task_area and page paramaters allowed.
  foreach ($queryParams as $queryParam => $queryParamValue) {
    if ($queryParam !== 'task_areas' && $queryParam !== 'page') {
      return;
    }
  }

  // Only one task_area category allowed.
  if (substr_count(\Drupal::request()->getRequestUri(), 'task_areas') > 1) {
    return;
  }

  $currentUri = \Drupal::request()->getUri();
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
    'vid' => 'task_area',
    'field_external_id' => $queryParams['task_areas'],
  ]);

  $term = reset($term);
  if ($term && $term->hasTranslation($langcode)) {
    $term = $term->getTranslation($langcode);
  }

  if ($term && $term->hasField('field_meta_description') && !$term->get('field_meta_description')->isEmpty()) {
    $description = [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => 'description',
        'content' => $term->get('field_meta_description')->getString(),
      ],
    ];

    $attachments['#attached']['html_head'][] = [$description, 'description'];
  }

  foreach ($attachments['#attached']['html_head'] as $key => $head) {
    switch ($head[1]) {
      case 'canonical_url':
        $attachments['#attached']['html_head'][$key][0]['#attributes']['href'] = $currentUri;
        break;

      case 'og_url':
      case 'twitter_cards_page_url':
        $attachments['#attached']['html_head'][$key][0]['#attributes']['content'] = $currentUri;
        break;

      case 'og_title':
      case 'twitter_cards_title':
        if ($term && $term->hasField('field_metadata') && !$term->get('field_metadata')->isEmpty()) {
          $attachments['#attached']['html_head'][$key][0]['#attributes']['content'] = $term->get('field_metadata')->getString();
        }
        break;
    }
  }
}

/**
 * Implements hook_helfi_paragraph_types().
 */
function helfi_rekry_job_search_helfi_paragraph_types() : array {
  $entities = [
    'node' => [
      'landing_page' => [
        'field_content' => [
          'job_search',
        ],
      ],
    ],
  ];

  $enabled = [];
  foreach ($entities as $entityTypeId => $bundles) {
    foreach ($bundles as $bundle => $fields) {
      foreach ($fields as $field => $paragraphTypes) {
        foreach ($paragraphTypes as $paragraphType) {
          $enabled[] = new ParagraphTypeCollection($entityTypeId, $bundle, $field, $paragraphType);
        }
      }
    }
  }
  return $enabled;
}
